{"version":3,"sources":["logo.svg","components/ContainerChild.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ContainerChild","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","todoName","table","onAddTodoForm","event","preventDefault","onAddTodo","_this$state","push","status","name","date","Date","now","setState","saveTable","onRemoveTodo","tableNew","filter","x","onUpdateTodo","index","findIndex","localStorage","setItem","JSON","stringify","parse","getItem","handleChange","bind","assertThisInitialized","defineProperty","target","value","_this2","_this$state2","react_default","a","createElement","Header","as","onSubmit","Input","onChange","icon","Icon","onClick","inverted","circular","link","fluid","placeholder","Table","celled","Body","map","_ref","ContainerChild_TableRow","key","Component","TableStatuses","1","color","2","TableRow","_ref2","Row","Cell","collapsing","Label","basic","title","moment","fromNow","format","replace","FixedMenuLayout","className","Menu","fixed","Container","Item","header","Image","size","src","logo","style","marginRight","Dropdown","item","simple","text","Divider","marginTop","flex","ContainerChild_ContainerChild","Segment","vertical","margin","backgroundColor","textAlign","List","horizontal","divided","href","Boolean","window","location","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.817da0ef.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\r\nimport { Header, Input, Icon, Table, Label } from \"semantic-ui-react\";\r\nimport moment from \"moment\";\r\n\r\nexport default class ContainerChild extends Component {\r\n  state = {\r\n    todoName: \"\",\r\n    table: []\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let table = JSON.parse(localStorage.getItem(\"table\"));\r\n\r\n    if (table) this.state.table = table;\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.onRemoveTodo = this.onRemoveTodo.bind(this);\r\n    this.onUpdateTodo = this.onUpdateTodo.bind(this);\r\n  }\r\n  onAddTodoForm = event => {\r\n    event.preventDefault();\r\n    this.onAddTodo();\r\n  };\r\n  onAddTodo = () => {\r\n    const { todoName, table } = this.state;\r\n    if (todoName) {\r\n      table.push({ status: 1, name: todoName, date: Date.now() });\r\n      this.setState({ todoName: \"\" });\r\n      this.saveTable(table);\r\n    }\r\n  };\r\n  onRemoveTodo = date => {\r\n    const { table } = this.state;\r\n    let tableNew = table.filter(x => x.date !== date);\r\n    this.saveTable(tableNew);\r\n  };\r\n  onUpdateTodo = date => {\r\n    const { table } = this.state;\r\n\r\n    let index = table.findIndex(x => x.date === date);\r\n    if (table[index].status === 1) table[index].status = 2;\r\n    else table[index].status = 1;\r\n\r\n    this.saveTable(table);\r\n  };\r\n  saveTable = table => {\r\n    this.setState({ table });\r\n    localStorage.setItem(\"table\", JSON.stringify(table));\r\n  };\r\n\r\n  handleChange(event) {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  }\r\n  render() {\r\n    const { todoName, table } = this.state;\r\n    return (\r\n      <div>\r\n        <Header as=\"h1\">React Todo Manager</Header>\r\n        <form onSubmit={this.onAddTodoForm}>\r\n          <Input\r\n            value={todoName}\r\n            name=\"todoName\"\r\n            onChange={this.handleChange}\r\n            icon={\r\n              <Icon\r\n                onClick={() => this.onAddTodo()}\r\n                name=\"add\"\r\n                inverted\r\n                circular\r\n                link\r\n              />\r\n            }\r\n            fluid\r\n            placeholder=\"Todo Name...\"\r\n          />\r\n        </form>\r\n        <Table celled>\r\n          <Table.Body>\r\n            {table.map(({ name, date, status }) => (\r\n              <TableRow\r\n                key={\"row_\" + date}\r\n                name={name}\r\n                date={date}\r\n                status={status}\r\n                onUpdateTodo={this.onUpdateTodo}\r\n                onRemoveTodo={this.onRemoveTodo}\r\n              />\r\n            ))}\r\n          </Table.Body>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst TableStatuses = {\r\n  1: { name: \"Added\", color: \"yellow\" },\r\n  2: { name: \"Completed\", color: \"blue\" }\r\n};\r\n\r\nconst TableRow = ({ name, date, status, onRemoveTodo, onUpdateTodo }) => (\r\n  <Table.Row>\r\n    <Table.Cell collapsing>\r\n      <Label\r\n        as=\"a\"\r\n        basic\r\n        color={TableStatuses[status].color}\r\n        onClick={() => onUpdateTodo(date)}\r\n      >\r\n        {TableStatuses[status].name}\r\n      </Label>\r\n    </Table.Cell>\r\n    <Table.Cell>{name}</Table.Cell>\r\n    <Table.Cell title={moment(date).fromNow()} collapsing>\r\n      <Label color=\"violet\">\r\n        {moment(date)\r\n          .format(\"DD-MM-YYYY HH:mm\")\r\n          .replace(moment().format(\"DD-MM-YYYY \"), \"\")}\r\n      </Label>\r\n    </Table.Cell>\r\n    <Table.Cell collapsing>\r\n      <Icon\r\n        onClick={() => onRemoveTodo(date)}\r\n        name=\"remove\"\r\n        inverted\r\n        circular\r\n        link\r\n      />\r\n    </Table.Cell>\r\n  </Table.Row>\r\n);\r\n","import React from 'react'\nimport {\n  Container,\n  Dropdown,\n  Image,\n  List,\n  Menu,\n  Segment\n} from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css'\nimport logo from './logo.svg';\nimport './index.css'\nimport ContainerChild from './components/ContainerChild'\n\nconst FixedMenuLayout = () => (\n  <div className='Site'>\n    <Menu fixed='top' inverted>\n      <Container>\n        <Menu.Item as='a' header>\n          <Image size='mini' src={logo} style={{ marginRight: '1.5em' }} />\n          RTM\n        </Menu.Item>\n        <Menu.Item as='a'>Home</Menu.Item>\n\n        <Dropdown item simple text='Dropdown'>\n          <Dropdown.Menu>\n            <Dropdown.Item>List Item</Dropdown.Item>\n            <Dropdown.Item>List Item</Dropdown.Item>\n            <Dropdown.Divider />\n            <Dropdown.Header>Header Item</Dropdown.Header>\n            <Dropdown.Item>\n              <i className='dropdown icon' />\n              <span className='text'>Submenu</span>\n              <Dropdown.Menu>\n                <Dropdown.Item>List Item</Dropdown.Item>\n                <Dropdown.Item>List Item</Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown.Item>\n            <Dropdown.Item>List Item</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n      </Container>\n    </Menu>\n\n    <Container className='Site-content' text style={{ marginTop: '7em', flex: 1 }}>\n      <ContainerChild />\n    </Container>\n\n    <Segment inverted vertical style={{ margin: '5em 0em 0em', backgroundColor: 'black' }}>\n      <Container textAlign='center'>\n        <List horizontal inverted divided link size='small'>\n          <List.Item as='a' href='#'>\n            Site Map\n          </List.Item>\n          <List.Item as='a' href='#'>\n            Contact Us\n          </List.Item>\n          <List.Item as='a' href='#'>\n            Terms and Conditions\n          </List.Item>\n          <List.Item as='a' href='#'>\n            Privacy Policy\n          </List.Item>\n        </List>\n      </Container>\n    </Segment>\n  </div>\n)\n\nexport default FixedMenuLayout","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}